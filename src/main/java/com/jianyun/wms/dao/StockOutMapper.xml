<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jianyun.wms.dao.StockOutMapper">
	
	<resultMap type="com.jianyun.wms.domain.StockOutDO" id="stockOutDO">
		<id property="id" column="STOCKOUT_ID"/>
		<result property="batchId" column="STOCKOUT_BATCH" />
		<result property="customerID" column="STOCKOUT_CUSTOMER_ID"/>
		<result property="customerName" column="STOCKOUT_CUSTOMER_NAME"/>
		<result property="goodID" column="STOCKOUT_GOOD_ID"/>
		<result property="goodName" column="STOCKOUT_GOOD_NAME"/>
		<result property="goodSize" column="STOCKOUT_GOOD_SIZE" />
		<result property="goodValue" column="STOCKOUT_GOOD_VALUE" />
		<result property="number" column="STOCKOUT_NUMBER"/>
		<result property="time" column="STOCKOUT_TIME"/>
		<result property="personInCharge" column="STOCKOUT_PERSON"/>
		<result property="repositoryID" column="STOCKOUT_REPOSITORY_ID"/>
		<result property="repository" column="STOCKOUT_REPOSITORY"/>
		<result property="shelvesID" column="STOCKOUT_SHELVES_ID" />
		<result property="shelves" column="STOCKOUT_SHELVES" />
		<result property="packages" column="STOCKOUT_PACKAGES" />
		<result property="remark" column="STOCKOUT_REMARK" />
		<result property="storeman" column="STOCKOUT_STOREMAN" />
		<result property="inputman" column="STOCKOUT_INPUTMAN" />
	</resultMap>
	
	<select id="selectAll" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_BATCH as STOCKOUT_BATCH,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKIN_GOOD_ID,
			g.GOOD_ID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			g.GOOD_SIZE as STOCKOUT_GOOD_SIZE,
			g.GOOD_VALUE as STOCKOUT_GOOD_VALUE,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_REPOSITORYID as STOCKOUT_REPOSITORY_ID,
			res.REPO_NAME as STOCKOUT_REPOSITORY,
			r.RECORD_SHELVESID as STOCKOUT_SHELVES_ID,
			sh.SHELVES_NAME as STOCKOUT_SHELVES,
			r.RECORD_PACKAGES as STOCKOUT_PACKAGES,
			r.RECORD_REMARK as STOCKOUT_REMARK,
			r.RECORD_STOREMAN as STOCKOUT_STOREMAN,
			r.RECORD_INPUTMAN as STOCKOUT_INPUTMAN
		from
			wms_record_out r
			LEFT JOIN wms_goods g
			ON r.RECORD_GOODID = g.GOOD_ID
			LEFT JOIN wms_customer c
			ON r.RECORD_CUSTOMERID = c.CUSTOMER_ID
			LEFT JOIN wms_respository res
			ON r.RECORD_REPOSITORYID = res.REPO_ID
			LEFT JOIN wms_shelves sh
			ON r.RECORD_SHELVESID = sh.SHELVES_ID
	</select>
	
	<select id="selectByCustomerId" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_BATCH as STOCKOUT_BATCH,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKIN_GOOD_ID,
			g.GOOD_ID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			g.GOOD_SIZE as STOCKOUT_GOOD_SIZE,
			g.GOOD_VALUE as STOCKOUT_GOOD_VALUE,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_REPOSITORYID as STOCKOUT_REPOSITORY_ID,
			res.REPO_NAME as STOCKOUT_REPOSITORY,
			r.RECORD_SHELVESID as STOCKOUT_SHELVES_ID,
			sh.SHELVES_NAME as STOCKOUT_SHELVES,
			r.RECORD_PACKAGES as STOCKOUT_PACKAGES,
			r.RECORD_REMARK as STOCKOUT_REMARK,
			r.RECORD_STOREMAN as STOCKOUT_STOREMAN,
			r.RECORD_INPUTMAN as STOCKOUT_INPUTMAN
		from
			wms_record_out r
			LEFT JOIN wms_goods g
			ON r.RECORD_GOODID = g.GOOD_ID
			LEFT JOIN wms_customer c
			ON r.RECORD_CUSTOMERID = c.CUSTOMER_ID
			LEFT JOIN wms_respository res
			ON r.RECORD_REPOSITORYID = res.REPO_ID
			LEFT JOIN wms_shelves sh
			ON r.RECORD_SHELVESID = sh.SHELVES_ID
		where
			r.RECORD_CUSTOMERID = #{customerId}
	</select>
	
	<select id="selectByGoodId" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_BATCH as STOCKOUT_BATCH,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKIN_GOOD_ID,
			g.GOOD_ID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			g.GOOD_SIZE as STOCKOUT_GOOD_SIZE,
			g.GOOD_VALUE as STOCKOUT_GOOD_VALUE,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_REPOSITORYID as STOCKOUT_REPOSITORY_ID,
			res.REPO_NAME as STOCKOUT_REPOSITORY,
			r.RECORD_SHELVESID as STOCKOUT_SHELVES_ID,
			sh.SHELVES_NAME as STOCKOUT_SHELVES,
			r.RECORD_PACKAGES as STOCKOUT_PACKAGES,
			r.RECORD_REMARK as STOCKOUT_REMARK,
			r.RECORD_STOREMAN as STOCKOUT_STOREMAN,
			r.RECORD_INPUTMAN as STOCKOUT_INPUTMAN
		from
			wms_record_out r
			LEFT JOIN wms_goods g
			ON r.RECORD_GOODID = g.GOOD_ID
			LEFT JOIN wms_customer c
			ON r.RECORD_CUSTOMERID = c.CUSTOMER_ID
			LEFT JOIN wms_respository res
			ON r.RECORD_REPOSITORYID = res.REPO_ID
			LEFT JOIN wms_shelves sh
			ON r.RECORD_SHELVESID = sh.SHELVES_ID
		where
			r.RECORD_GOODID = #{goodId}
	</select>
	
	<select id="selectById" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_BATCH as STOCKOUT_BATCH,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKIN_GOOD_ID,
			g.GOOD_ID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			g.GOOD_SIZE as STOCKOUT_GOOD_SIZE,
			g.GOOD_VALUE as STOCKOUT_GOOD_VALUE,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_REPOSITORYID as STOCKOUT_REPOSITORY_ID,
			res.REPO_NAME as STOCKOUT_REPOSITORY,
			r.RECORD_SHELVESID as STOCKOUT_SHELVES_ID,
			sh.SHELVES_NAME as STOCKOUT_SHELVES,
			r.RECORD_PACKAGES as STOCKOUT_PACKAGES,
			r.RECORD_REMARK as STOCKOUT_REMARK,
			r.RECORD_STOREMAN as STOCKOUT_STOREMAN,
			r.RECORD_INPUTMAN as STOCKOUT_INPUTMAN
		from
			wms_record_out r
			LEFT JOIN wms_goods g
			ON r.RECORD_GOODID = g.GOOD_ID
			LEFT JOIN wms_customer c
			ON r.RECORD_CUSTOMERID = c.CUSTOMER_ID
			LEFT JOIN wms_respository res
			ON r.RECORD_REPOSITORYID = res.REPO_ID
			LEFT JOIN wms_shelves sh
			ON r.RECORD_SHELVESID = sh.SHELVES_ID
		where
			r.RECORD_ID = #{id}
	</select>
	
	<select id="selectByRepositoryID" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_BATCH as STOCKOUT_BATCH,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKIN_GOOD_ID,
			g.GOOD_ID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			g.GOOD_SIZE as STOCKOUT_GOOD_SIZE,
			g.GOOD_VALUE as STOCKOUT_GOOD_VALUE,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_REPOSITORYID as STOCKOUT_REPOSITORY_ID,
			res.REPO_NAME as STOCKOUT_REPOSITORY,
			r.RECORD_SHELVESID as STOCKOUT_SHELVES_ID,
			sh.SHELVES_NAME as STOCKOUT_SHELVES,
			r.RECORD_PACKAGES as STOCKOUT_PACKAGES,
			r.RECORD_REMARK as STOCKOUT_REMARK,
			r.RECORD_STOREMAN as STOCKOUT_STOREMAN,
			r.RECORD_INPUTMAN as STOCKOUT_INPUTMAN
		from
			wms_record_out r
			LEFT JOIN wms_goods g
			ON r.RECORD_GOODID = g.GOOD_ID
			LEFT JOIN wms_customer c
			ON r.RECORD_CUSTOMERID = c.CUSTOMER_ID
			LEFT JOIN wms_respository res
			ON r.RECORD_REPOSITORYID = res.REPO_ID
			LEFT JOIN wms_shelves sh
			ON r.RECORD_SHELVESID = sh.SHELVES_ID
		where
			r.RECORD_REPOSITORYID = #{repositoryID}
	</select>

	<select id="selectByRepositoryIDAndDate" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_BATCH as STOCKOUT_BATCH,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKIN_GOOD_ID,
			g.GOOD_ID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			g.GOOD_SIZE as STOCKOUT_GOOD_SIZE,
			g.GOOD_VALUE as STOCKOUT_GOOD_VALUE,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_REPOSITORYID as STOCKOUT_REPOSITORY_ID,
			res.REPO_NAME as STOCKOUT_REPOSITORY,
			r.RECORD_SHELVESID as STOCKOUT_SHELVES_ID,
			sh.SHELVES_NAME as STOCKOUT_SHELVES,
			r.RECORD_PACKAGES as STOCKOUT_PACKAGES,
			r.RECORD_REMARK as STOCKOUT_REMARK,
			r.RECORD_STOREMAN as STOCKOUT_STOREMAN,
			r.RECORD_INPUTMAN as STOCKOUT_INPUTMAN
		from
			wms_record_out r
			LEFT JOIN wms_goods g
			ON r.RECORD_GOODID = g.GOOD_ID
			LEFT JOIN wms_customer c
			ON r.RECORD_CUSTOMERID = c.CUSTOMER_ID
			LEFT JOIN wms_respository res
			ON r.RECORD_REPOSITORYID = res.REPO_ID
			LEFT JOIN wms_shelves sh
			ON r.RECORD_SHELVESID = sh.SHELVES_ID
        <where>
			<if test="repositoryID > 0">
				and r.RECORD_REPOSITORYID = #{repositoryID}
			</if>
			<if test="startDate != null">
				and r.RECORD_TIME >= #{startDate,jdbcType=DATE}
			</if>
			<if test="endDate != null">
				<![CDATA[and r.RECORD_TIME <= #{endDate,jdbcType=DATE}]]>
			</if>
		</where>
		GROUP BY STOCKOUT_BATCH
		ORDER BY STOCKOUT_TIME DESC
	</select>

	<select id="selectByBatchId" resultMap="stockOutDO">
		select
			r.RECORD_ID as STOCKOUT_ID,
			r.RECORD_BATCH as STOCKOUT_BATCH,
			r.RECORD_CUSTOMERID as STOCKOUT_CUSTOMER_ID,
			c.CUSTOMER_NAME as STOCKOUT_CUSTOMER_NAME,
			r.RECORD_GOODID as STOCKIN_GOOD_ID,
			g.GOOD_ID as STOCKOUT_GOOD_ID,
			g.GOOD_NAME as STOCKOUT_GOOD_NAME,
			g.GOOD_SIZE as STOCKOUT_GOOD_SIZE,
			g.GOOD_VALUE as STOCKOUT_GOOD_VALUE,
			r.RECORD_NUMBER as STOCKOUT_NUMBER,
			r.RECORD_TIME as STOCKOUT_TIME,
			r.RECORD_PERSON as STOCKOUT_PERSON,
			r.RECORD_REPOSITORYID as STOCKOUT_REPOSITORY_ID,
			res.REPO_NAME as STOCKOUT_REPOSITORY,
			r.RECORD_SHELVESID as STOCKOUT_SHELVES_ID,
			sh.SHELVES_NAME as STOCKOUT_SHELVES,
			r.RECORD_PACKAGES as STOCKOUT_PACKAGES,
			r.RECORD_REMARK as STOCKOUT_REMARK,
			r.RECORD_STOREMAN as STOCKOUT_STOREMAN,
			r.RECORD_INPUTMAN as STOCKOUT_INPUTMAN
		from
			wms_record_out r
			LEFT JOIN wms_goods g
			ON r.RECORD_GOODID = g.GOOD_ID
			LEFT JOIN wms_customer c
			ON r.RECORD_CUSTOMERID = c.CUSTOMER_ID
			LEFT JOIN wms_respository res
			ON r.RECORD_REPOSITORYID = res.REPO_ID
			LEFT JOIN wms_shelves sh
			ON r.RECORD_SHELVESID = sh.SHELVES_ID
		WHERE
			r.RECORD_BATCH = #{batchId}
	</select>
		
	<insert id="insert">
		insert into wms_record_out(RECORD_ID,RECORD_BATCH,RECORD_CUSTOMERID,RECORD_GOODID,RECORD_NUMBER,RECORD_TIME,RECORD_PERSON,RECORD_REPOSITORYID,RECORD_SHELVESID,RECORD_PACKAGES,RECORD_REMARK,RECORD_STOREMAN,RECORD_INPUTMAN)
		values(#{id},#{batchId},#{customerID},#{goodID},#{number},#{time},#{personInCharge},#{repositoryID},#{shelvesID},#{packages},#{remark},#{storeman},#{inputman})
	</insert>

	<insert id="insertBatch" parameterType="java.util.List">
		insert into wms_record_out(RECORD_ID,RECORD_BATCH,RECORD_CUSTOMERID,RECORD_GOODID,RECORD_NUMBER,RECORD_TIME,RECORD_PERSON,RECORD_REPOSITORYID,RECORD_SHELVESID,RECORD_PACKAGES,RECORD_REMARK,RECORD_STOREMAN,RECORD_INPUTMAN)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(
				#{item.id},
				#{item.batchId},
				#{item.customerID},
				#{item.goodID},
				#{item.number},
				#{item.time},
				#{item.personInCharge},
				#{item.repositoryID},
				#{item.shelvesID},
				#{item.packages},
				#{item.remark},
				#{item.storeman},
				#{item.inputman}
			)
		</foreach>
	</insert>
	
	<update id="update">
		update
			wms_record_out
		set
			RECORD_CUSTOMERID = #{customerID},
			RECORD_GOODID = #{goodID},
			RECORD_NUMBER = #{number},
			RECORD_TIME = #{time},
			RECORD_PERSON = #{personInCharge}
		where
			RECORD_ID = #{id}
	</update>
	
	<delete id="deleteById">
		delete from wms_record_out
		where RECORD_ID = #{id}
	</delete>

	<select id="queryStatisticalDataByGoodIdAndTime" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT
			DATE_FORMAT(r.RECORD_TIME,'%Y-%m') AS date,
			SUM(r.RECORD_NUMBER) AS total,
			SUM(r.RECORD_NUMBER * g.GOOD_VALUE) as price
		FROM
			wms_record_out r
		LEFT JOIN wms_goods g
		ON r.RECORD_GOODID = g.GOOD_ID
		WHERE
			DATE_FORMAT(r.RECORD_TIME,'%Y-%m') &gt;= #{startDate}
		AND
			DATE_FORMAT(r.RECORD_TIME,'%Y-%m') &lt;= #{endDate}
		<if test="goodId != null and goodId != ''" >
			AND r.RECORD_GOODID = #{goodId}
		</if>
		GROUP BY
			DATE_FORMAT(r.RECORD_TIME,'%Y-%m')
	</select>
</mapper>